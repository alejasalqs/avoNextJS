{"ast":null,"code":"import _extends from \"/Volumes/HDD 1TB/Proyectos/React/next-js/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Volumes/HDD 1TB/Proyectos/React/next-js/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// Al igual que con document es necesario mantener el nombre pages/_app.js\n// import App from 'next/app'\nimport { Layout } from \"../components/Layout\";\nimport \"../style.css\";\n\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  // este componente son todas nuestras pages\n  // provider\n  // layout común para todas las páginas\n  // props adicionales\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  })));\n} // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//\n//   return { ...appProps }\n// }\n\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/Volumes/HDD 1TB/Proyectos/React/next-js/pages/_app.js"],"names":["Layout","MyApp","Component","pageProps"],"mappings":";;;;AAAA;AACA;AAEA,SAASA,MAAT,QAAuB,sBAAvB;AACA,OAAO,cAAP;;AAEA,SAASC,KAAT,OAAyC;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;AACvC;AACA;AACA;AACA;AACA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAKD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KAtBSF,K;AAwBT,eAAeA,KAAf","sourcesContent":["// Al igual que con document es necesario mantener el nombre pages/_app.js\n// import App from 'next/app'\n\nimport { Layout } from \"../components/Layout\";\nimport \"../style.css\";\n\nfunction MyApp({ Component, pageProps }) {\n  // este componente son todas nuestras pages\n  // provider\n  // layout común para todas las páginas\n  // props adicionales\n  return (\n    <Layout>\n      <Component {...pageProps} />\n    </Layout>\n  );\n}\n\n// Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//\n//   return { ...appProps }\n// }\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}