{"ast":null,"code":"var __jsx = React.createElement;\n// Para usar rutas dinámicas creamos una carpeta para la primer parte de la ruta\n// para este ejemplo es localhost:3000/product/\n// para la segunda parte creamos un archivo [variable].js, que va a significar la segunda parte de la ruta\n// lo que se ponga dentro de [] va a ser como se llame la variable en código\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\"; // para obtener la variable del url\n\nconst ProductItem = () => {\n  var _product$attributes, _product$attributes2, _product$attributes3, _product$attributes4;\n\n  const {\n    0: product,\n    1: setProduct\n  } = useState([]);\n  const {\n    query: {\n      id\n    }\n  } = useRouter();\n  console.log(id);\n  useEffect(() => {\n    if (id) {\n      fetch(`/api/avo/${id}`).then(res => res.json().then(data => setProduct(data)));\n    }\n  }, [id]);\n  return __jsx(\"div\", {\n    className: \"product-container\"\n  }, __jsx(\"div\", {\n    className: \"product_presentation\"\n  }, __jsx(\"img\", {\n    src: product.image,\n    alt: product.name\n  }), __jsx(\"div\", {\n    className: \"product_presentation-info\"\n  }, __jsx(\"h2\", null, product.name), __jsx(\"span\", null, product.sku))), __jsx(\"div\", {\n    className: \"product_about\"\n  }, __jsx(\"h3\", null, \"About this avocado\"), __jsx(\"p\", null, (_product$attributes = product.attributes) === null || _product$attributes === void 0 ? void 0 : _product$attributes.description)), __jsx(\"hr\", null), __jsx(\"div\", {\n    className: \"product_attributes\"\n  }), __jsx(\"table\", {\n    className: \"ui celled table\"\n  }, __jsx(\"thead\", {\n    className: \"\"\n  }, __jsx(\"tr\", {\n    className: \"\"\n  }, __jsx(\"th\", {\n    colSpan: \"2\",\n    className: \"\"\n  }, \"Attributes\"))), __jsx(\"tbody\", {\n    className: \"\"\n  }, __jsx(\"tr\", {\n    className: \"\"\n  }, __jsx(\"td\", {\n    className: \"attr-name\"\n  }, \"shape\"), __jsx(\"td\", {\n    className: \"\"\n  }, (_product$attributes2 = product.attributes) === null || _product$attributes2 === void 0 ? void 0 : _product$attributes2.shape)), __jsx(\"tr\", {\n    className: \"\"\n  }, __jsx(\"td\", {\n    className: \"attr-name\"\n  }, \"hardiness\"), __jsx(\"td\", {\n    className: \"\"\n  }, (_product$attributes3 = product.attributes) === null || _product$attributes3 === void 0 ? void 0 : _product$attributes3.hardiness)), __jsx(\"tr\", {\n    className: \"\"\n  }, __jsx(\"td\", {\n    className: \"attr-name\"\n  }, \"taste\"), __jsx(\"td\", {\n    className: \"\"\n  }, (_product$attributes4 = product.attributes) === null || _product$attributes4 === void 0 ? void 0 : _product$attributes4.taste)))));\n};\n\nexport default ProductItem;","map":null,"metadata":{},"sourceType":"module"}